[gd_scene load_steps=11 format=3 uid="uid://d32epd17r5fkh"]

[ext_resource type="PackedScene" uid="uid://cjwc7qkr3jm5q" path="res://Scenes/EscapeMenu.tscn" id="1_hxqom"]
[ext_resource type="PackedScene" uid="uid://b43t4djnvqvlc" path="res://Scenes/GUI.tscn" id="1_x4tdb"]
[ext_resource type="AudioStream" uid="uid://crdkeqg4tkrti" path="res://Sounds/walk1.ogg" id="3_oprb5"]
[ext_resource type="AudioStream" uid="uid://bu1um4dt87er1" path="res://Sounds/walk2.ogg" id="4_lqrsf"]
[ext_resource type="AudioStream" uid="uid://b27osojanp70a" path="res://Sounds/walk4.ogg" id="6_8fyv0"]

[sub_resource type="GDScript" id="GDScript_27n43"]
resource_name = "Player"
script/source = "extends CharacterBody3D

const mix_view = -PI/2
const max_view = PI/2

var rot_x = 0
var rot_y = 0
var GUIVISIBLE : bool = true


const JUMP_VELOCITY = 6

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Engine.time_scale = 1
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED

var action_object = null

func action():
	print_debug($Head/RayCast3D.get_collider())
	action_object = $Head/RayCast3D.get_collider()
	if action_object != null:
		print_debug(action_object.name,\" Click\")
		if action_object.name == \"Door\":
			action_object.open()

var Flash : bool = true

func _physics_process(delta):
	
	#print_debug(position)
	
	if Input.is_action_just_pressed(\"menu_escape\"):
		PauseMenu()
	
	if Input.is_action_just_pressed(\"flashlight\"):
		Flash = !Flash
	if Flash:
		$Head/Flashlight.show()
	else:
		$Head/Flashlight.hide()
	if Input.is_action_just_pressed(\"GUI\"):
		GUIVISIBLE = !GUIVISIBLE
		if !GUIVISIBLE:
			$EscapeMenu.hide()
			$GUI.hide()
		else:
			if Engine.time_scale == 0 :
				$EscapeMenu.show()
			$GUI.show()
	
	if Input.is_action_just_pressed(\"ScreenShot\"):
		take_screenshot()
	
	var SPEED = 5.0
	const SPEED_UP = 2
	
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_pressed(\"move_space\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
	
	if Input.is_action_pressed(\"move_speed_up\"):
		SPEED *= SPEED_UP
	
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"move_left\", \"move_right\", \"move_up\", \"move_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
		
		if is_on_floor():
			if !$Audio/AudioPlayer.playing:
				if $Audio/Timer.is_stopped():
					$Audio/Timer.start()
					$Audio/AudioPlayer.play()
		
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)
	move_and_slide()



func _input(e):
	if !pause:
		if e is InputEventMouseMotion:
			rot_x -= e.relative.y * G.Sensivity * G.FixSensivity
			rot_y = -e.relative.x * G.Sensivity * G.FixSensivity
			
			#transform.basis = Basis(Vector3(0,1,0), rot_y) * transform.basis
			transform.basis = transform.basis.rotated(Vector3(0,1,0), rot_y)
			
			if rot_x <= max_view && rot_x >= mix_view:
				$Head.transform.basis = Basis(Vector3(1,0,0), rot_x)

			if rot_x > max_view: rot_x = max_view
			elif rot_x < mix_view: rot_x = mix_view
			
		if e is InputEventMouse:
			if e.is_action_pressed(\"leftMouse\"):
				action()

var pause : bool = false
func PauseMenu():
	pause = !pause
	if pause:
		Engine.time_scale = 0
		if GUIVISIBLE:
			$EscapeMenu.show()
		Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	else:
		$EscapeMenu.hide()
		Engine.time_scale = 1
		Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
		$EscapeMenu/MainMenu.show()
		$EscapeMenu/SettingsMenu.hide()


func take_screenshot():
	DirAccess.make_dir_absolute(\"screenshots\")
	
	var date = Time.get_date_string_from_system().replace(\".\",\"_\") 
	var time : String = Time.get_time_string_from_system().replace(\":\",\"\")
	var tick : String = str(Time.get_ticks_msec())
	var screenshot_path = \"./screenshots/\" + \"screenshot_\" + date+ \"_\" + time + \"_\" + tick + \".png\"
	
	print(screenshot_path)
	
	var image = get_viewport().get_texture().get_image()
	image.save_png(screenshot_path)
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_ih2oj"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_8ynty"]

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_i53l0"]
streams_count = 3
stream_0/stream = ExtResource("3_oprb5")
stream_0/weight = 1.0
stream_1/stream = ExtResource("4_lqrsf")
stream_1/weight = 1.0
stream_2/stream = ExtResource("6_8fyv0")
stream_2/weight = 1.0

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_ypov5"]
playback_mode = 2

[node name="Player" type="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
script = SubResource("GDScript_27n43")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
visible = false
mesh = SubResource("CapsuleMesh_ih2oj")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_8ynty")

[node name="GUI" parent="." instance=ExtResource("1_x4tdb")]

[node name="EscapeMenu" parent="." instance=ExtResource("1_hxqom")]
visible = false

[node name="Head" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.874933, 0)

[node name="RayCast3D" type="RayCast3D" parent="Head"]
transform = Transform3D(0.05, 0, 0, 0, -1.74846e-07, -0.05, 0, 4, -2.18557e-09, 0, 0, 0)
collide_with_areas = true
debug_shape_custom_color = Color(0, 0.4, 0.266667, 1)

[node name="Camera3D" type="Camera3D" parent="Head"]
current = true
size = 5.0

[node name="Flashlight" type="SpotLight3D" parent="Head"]
shadow_enabled = true
spot_range = 12.9016
spot_angle = 39.1463

[node name="Audio" type="Node3D" parent="."]

[node name="AudioPlayer" type="AudioStreamPlayer" parent="Audio"]
stream = SubResource("AudioStreamRandomizer_i53l0")
volume_db = -6.21

[node name="Timer" type="Timer" parent="Audio"]
wait_time = 0.6
one_shot = true

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="Audio"]
stream = SubResource("AudioStreamRandomizer_ypov5")
